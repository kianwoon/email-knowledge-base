# Use an official Python runtime as a parent image
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV CELERY_BROKER_URL="redis://redis-queue.email-knowledge-base-2.internal:6379/0"
ENV CELERY_RESULT_BACKEND="redis://redis-queue.email-knowledge-base-2.internal:6379/0"

# Set work directory
WORKDIR /app

# Install system dependencies if needed (e.g., for database connectors)
# RUN apt-get update && apt-get install -y --no-install-recommends some-package && rm -rf /var/lib/apt/lists/*

# Install dependencies
# Copy requirements from the backend directory
COPY backend/requirements.txt /app/requirements.txt

RUN apt-get update \
    && apt-get install -y --no-install-recommends build-essential python3-dev supervisor \
    && pip install --upgrade pip setuptools wheel cython \
    && pip install --no-cache-dir -r requirements.txt \
    && apt-get purge -y --auto-remove build-essential python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Create a dedicated, non-root celery user
RUN groupadd -r celery && useradd -r -g celery celery

# Copy the backend application code specifically
COPY backend/ /app/

# Create supervisord configuration to run both worker and beat
RUN mkdir -p /etc/supervisor/conf.d
COPY backend/supervisor/celery.conf /etc/supervisor/conf.d/celery.conf

# Create startup script
COPY backend/supervisor/start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Create necessary directories for logs with proper permissions
RUN mkdir -p /app/logs/celery
RUN mkdir -p /app/logs/supervisor

# Update supervisord configuration to use app logs directory instead of /var/log
RUN sed -i 's|logfile=/var/log/supervisord.log|logfile=/app/logs/supervisor/supervisord.log|g' /etc/supervisor/conf.d/celery.conf
RUN sed -i 's|stdout_logfile=/var/log/celery/|stdout_logfile=/app/logs/celery/|g' /etc/supervisor/conf.d/celery.conf
RUN sed -i 's|stderr_logfile=/var/log/celery/|stderr_logfile=/app/logs/celery/|g' /etc/supervisor/conf.d/celery.conf

# Ensure celery user owns application and log directories
RUN chown -R celery:celery /app /etc/supervisor

# Switch to non-root user
USER celery

# Command to start Celery Beat directly, bypassing Supervisor for debugging
CMD ["celery", "-A", "app.celery_app", "beat"]