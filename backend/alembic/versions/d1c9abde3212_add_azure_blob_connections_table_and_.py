"""Add azure_blob_connections table and fix users.id type

Revision ID: d1c9abde3212
Revises: 78b6f19db59f
Create Date: 2025-04-14 13:10:06.069410

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'd1c9abde3212'
down_revision: Union[str, None] = '78b6f19db59f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - manually reordered ###
    
    # 1. Alter users.id column type FIRST
    op.alter_column('users', 'id',
               existing_type=sa.VARCHAR(),
               type_=sa.UUID(),
               existing_nullable=True,
               postgresql_using='id::uuid')

    # 2. Other unrelated aws_credentials changes
    op.create_unique_constraint('uq_user_aws_credential', 'aws_credentials', ['user_email'])
    op.drop_constraint('aws_credentials_user_email_fkey', 'aws_credentials', type_='foreignkey')

    # 3. Create azure_blob_connections table (FK should work now)
    op.create_table('azure_blob_connections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('account_name', sa.String(), nullable=False),
    sa.Column('auth_type', sa.Enum('CONNECTION_STRING', name='azureauthtype'), nullable=False),
    sa.Column('credentials', sa.Text(), nullable=False),
    sa.Column('container_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('azure_blob_connections', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_azure_blob_connections_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_azure_blob_connections_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - manually reordered ###

    # 1. Drop azure_blob_connections table FIRST
    with op.batch_alter_table('azure_blob_connections', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_azure_blob_connections_user_id'))
        batch_op.drop_index(batch_op.f('ix_azure_blob_connections_name'))

    op.drop_table('azure_blob_connections')
    sa.Enum('CONNECTION_STRING', name='azureauthtype').drop(op.get_bind(), checkfirst=False)
    
    # 2. Other unrelated aws_credentials changes (reverse order)
    op.create_foreign_key('aws_credentials_user_email_fkey', 'aws_credentials', 'users', ['user_email'], ['email'])
    op.drop_constraint('uq_user_aws_credential', 'aws_credentials', type_='unique')

    # 3. Alter users.id column type back
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=True,
               postgresql_using='id::varchar')

    # ### end Alembic commands ###
