# Trigger deployment of a Koyeb app when changes are pushed to the main branch
name: Deploy Koyeb App Official

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.koyeb.yml'

jobs:
  deploy-backend:
    name: Deploy Backend Service
    runs-on: ubuntu-22.04
    env:
      KOYEB_APP_NAME: ${{ secrets.KOYEB_APP_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for backend changes
        id: changed_backend_files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            backend/**
            !backend/services/**
            !backend/tasks/**
            !backend/app/celery_app.py
            !backend/app/config.py
            !backend/supervisor/**
            !backend/supervison/**
            !backend/Dockerfile.worker
            !.github/**

      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      - name: Redeploy Backend Service
        if: steps.changed_backend_files.outputs.any_changed == 'true'
        run: |
          # Redeploy backend, skipping cache only if requirements.txt, Dockerfile, or Dockerfile.worker changed
          if echo "${{ steps.changed_backend_files.outputs.changed_files }}" | grep -q '^backend/\(requirements\.txt\|Dockerfile\|Dockerfile\.worker\)$'; then
            echo "Requirements, Dockerfile, or Dockerfile.worker changed, redeploying backend without cache"
            koyeb service redeploy email-knowledge-base-2/backend-service --skip-cache
          else
            echo "Redeploying backend with cache"
            koyeb service redeploy email-knowledge-base-2/backend-service
          fi

  deploy-frontend:
    name: Deploy Frontend Service
    runs-on: ubuntu-22.04
    env:
      KOYEB_APP_NAME: ${{ secrets.KOYEB_APP_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for frontend changes
        id: changed_frontend_files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            frontend/**

      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      - name: Redeploy Frontend Service
        if: steps.changed_frontend_files.outputs.any_changed == 'true'
        run: |
          koyeb service redeploy email-knowledge-base-2/frontend-service

  deploy-worker:
    name: Deploy Celery Worker
    runs-on: ubuntu-22.04
    env:
      KOYEB_APP_NAME: ${{ secrets.KOYEB_APP_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for worker-related backend changes
        id: changed_worker_files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            backend/Dockerfile.worker
            backend/supervisor/**
            backend/supervison/**
            backend/services/**
            backend/tasks/**
            backend/requirements.txt
            backend/app/celery_app.py
            backend/app/config.py
            !.github/**

      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      - name: Redeploy Celery Worker
        if: steps.changed_worker_files.outputs.any_changed == 'true'
        run: |
          # Redeploy worker, skipping cache only if requirements.txt, Dockerfile, or Dockerfile.worker changed
          if echo "${{ steps.changed_worker_files.outputs.changed_files }}" | grep -q '^backend/\(requirements\.txt\|Dockerfile\|Dockerfile\.worker\)$'; then
            echo "Requirements, Dockerfile, or Dockerfile.worker changed, redeploying worker without cache"
            koyeb service redeploy email-knowledge-base-2/celery-worker --skip-cache
          else
            echo "Redeploying worker with cache"
            koyeb service redeploy email-knowledge-base-2/celery-worker
          fi