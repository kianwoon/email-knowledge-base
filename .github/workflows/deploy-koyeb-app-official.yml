# Trigger deployment of a Koyeb app when changes are pushed to the main branch
# This workflow uses the official Koyeb deploy action.
# Force re-evaluation trigger
name: Deploy Koyeb App Official

on:
  push:
    branches:
      - main # Or your primary deployment branch
    paths:
      # Trigger workflow if ANY relevant code/config changes:
      - 'frontend/**'             # Still trigger for frontend changes (Koyeb figures it out)
      - 'backend/**'              # Broadened backend path
      - '.koyeb.yml'                # Koyeb configuration changes

jobs:
  deploy:
    name: Redeploy Koyeb App
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for changed-files action to compare commits

      # Add step to detect changes in specific backend directories
      - name: Check for worker-related backend changes
        id: changed_worker_files
        uses: tj-actions/changed-files@v44 # Use a specific version
        with:
          files: |
            backend/services/**
            backend/tasks/**
            backend/requirements.txt
            backend/app/celery_app.py
            backend/app/config.py

      # Add step to detect changes in frontend directory
      - name: Check for frontend changes
        id: changed_frontend_files
        uses: tj-actions/changed-files@v44
        with:
          files: frontend/**

      # +++ Add step to detect general backend changes +++
      - name: Check for backend changes
        id: changed_backend_files # Use a distinct ID
        uses: tj-actions/changed-files@v44
        with:
          files: backend/** # Target the entire backend directory

      # Re-add Python setup and CLI install
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip & Install setuptools
        run: python -m pip install --upgrade pip setuptools

      # Replace the incorrect pip install and login steps with the community action
      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2 # Use the community action for setup
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}
          # Optional: github_token: "${{ secrets.GITHUB_TOKEN }}" if needed for private repos

      # Trigger specific service redeploys
      # Note: Add more services here if needed
      - name: Redeploy Backend Service
        # +++ Add conditional execution +++
        if: steps.changed_backend_files.outputs.any_changed == 'true'
        env:
          KOYEB_APP_NAME: ${{ secrets.KOYEB_APP_NAME }}
        run: koyeb service redeploy $KOYEB_APP_NAME/backend-service

      - name: Redeploy Frontend Service
        # Only run if files in frontend/ changed
        if: steps.changed_frontend_files.outputs.any_changed == 'true'
        env:
          KOYEB_APP_NAME: ${{ secrets.KOYEB_APP_NAME }}
        run: koyeb service redeploy email-knowledge-base-2/frontend-service

      - name: Redeploy Celery Worker Service
        # Only run if files in services/ or tasks/ changed
        if: steps.changed_worker_files.outputs.any_changed == 'true'
        env:
          KOYEB_APP_NAME: ${{ secrets.KOYEB_APP_NAME }}
        run: koyeb service redeploy $KOYEB_APP_NAME/celery-worker

      # Temporarily comment out the failing Koyeb action step
      # - name: Trigger Koyeb App Deployment
      #   uses: koyeb/action-deploy@v2
      #   with:
      #     koyeb_api_token: ${{ secrets.KOYEB_API_TOKEN }}
      #     app: ${{ secrets.KOYEB_APP_NAME }}

      # Add a simple test step
      - name: Run Test Step
        run: echo "Workflow executed successfully"

      # Optionally add a message:
      # message: "Deploy triggered by commit ${{ github.sha }} on ${{ github.ref_name }}" 