name: Deploy Celery Worker to Koyeb

# Trigger this workflow only when changes are pushed to the main branch
# REMOVED paths filter for testing
on:
  push:
    branches:
      - main  # Or change to your primary deployment branch if different
    paths:
      - 'backend/Dockerfile.worker'    # The worker's Dockerfile
      - 'backend/celery_app.py'        # Celery app setup
      - 'backend/tasks/**'             # Any changes within the tasks directory
      - 'backend/requirements.txt'     # Dependency changes affect the worker build
      # --- Add other backend paths if your Celery tasks import code from them ---
      - 'backend/app/config.py'        # Core settings
      - 'backend/app/db/**'            # Database session, engine, qdrant client
      - 'backend/app/crud/**'          # CRUD operations used by tasks
      - 'backend/app/models/**'        # Database/Pydantic models used by tasks
      - 'backend/app/services/**'      # Service logic used by tasks
      - 'backend/app/utils/**'         # Utility functions (e.g., security)
      # Example: If tasks use models directly:
      # - 'backend/app/models/**'
      # Example: If tasks use specific services:
      # - 'backend/app/services/some_task_service.py'
      # - 'backend/app/crud/some_task_crud.py'
      # - 'backend/app/config.py' # If celery config depends on it directly

jobs:
  build:
    name: Build and Test Celery Worker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install dependencies (Optional: If you need to install requirements)
      - name: Install Dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r backend/requirements.txt

      # Run Tests (Optional: Only if you have a test suite for the worker)
      - name: Run Tests
        run: |
          pytest tests/

  deploy:
    name: Deploy Celery Worker Service
    needs: build  # Ensure deployment only happens after successful build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Trigger Koyeb Service Redeployment
        uses: koyeb/action-deploy@v2
        with:
          koyeb_api_token: ${{ secrets.KOYEB_API_TOKEN }}
          app: ${{ secrets.KOYEB_APP_NAME }}
          service: 'celery-worker'
          # Uncomment the line below if you want to add a custom message
          # message: "Deploying Celery worker triggered by commit ${{ github.sha }}"

      # Optional: Add rollback in case of failure (Example)
      - name: Rollback Deployment
        if: failure()
        run: |
          echo "Deployment failed. Rolling back."
          koyeb action rollback --app ${{ secrets.KOYEB_APP_NAME }} --service celery-worker
